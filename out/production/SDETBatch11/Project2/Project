1. Create an Interface 'Shape' with undefined methods
as calculateArea and calculatePerimiter. Create 2 classes Circle & Square that implements
functionality defined in the Shape Interface. Test your code.
2.We have to calculate the average of marks obtained in three
subjects by student A and by student B. Create class
'Marks' with an abstract method 'getPercentage' that will be
returning the average percentage of marks. Provide implementation
of abstract method in classes 'A' and 'B'. The constructor of student
A takes the marks in three subjects as its parameters and the
marks in four subjects as its parameters for student B. Test your code
3. Create a Class Car that would have the following fields:
carPrice and color and method calculateSalePrice() which should be returning a price of the car.
   Create 2 sub classes: Sedan and Truck. The Truck class has field as
   weight and has its own implementation of  calculateSalePrice() method
   in which returned price calculated as following: if weight>2000 then
   returned price car should include 10% discount, otherwise 20% discount.
   The Sedan class has field as length and also does it is
   own implementation of calculateSalePrice(): if length of sedan is
   >20 feet then returned car price should include 5% discount, otherwise 10% discount
   4. Create Registration Class in which you would have variables as email,
   userName and password that have an access scope only within its own class.
   After creating an object of the class user should be able to call methods
   and in each method separately pass values to set users email, username and password.
      Requirements:
      Valid email consider to be only yahoo
      Valid userName and password cannot be empty and should be of length
      larger than 6 characters. Also valid password cannot contain userName.

      5. Implement code for a diagram

      Please record a group answer to the given Java questions
      1. What types of variables we have in Java. Define all of them and explain the differences
      2. What is the constructor? Use of a constructor in the class? Difference
      between constructor and a method? Can we overload a constructor?
      3. What is the usage of super and this? Super vs this? Super() vs super.? this() vs this.
      4. What is Inheritance? Benefits? Types? Explain each type
      5. What is Overloading? How can it be achieved? What can we overload and what we cannot?
      6. What is Overriding? How can it be achieved? What can we override and what we cannot?
      7. What is Polymorphism? Types of Polymorphism? Differences between Overloading & Overriding?
      8. What is the final keyword,usage and purpose?
      9. What is Abstraction? How can we achieve an Abstraction in Java?
      What is Interface? What is Abstract Class? Interface vs Abstract Class?